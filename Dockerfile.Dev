FROM docker.m.daocloud.io/php:8.3-apache

ENV REFRESH_DATE=9


RUN apt-get clean &&  apt-get update
RUN apt-get install -y wget zip libzip-dev zlib1g-dev autoconf automake libtool vim git iputils-ping libgmp-dev
# dot 的安装,用于输出workflow
# RUN apt install -y graphviz
# 安装gd的
RUN apt-get install -y zlib1g-dev libz-dev libfreetype6-dev libjpeg62-turbo-dev libpng-dev
WORKDIR /home
# 安装 oniguruma
ENV ORIGURUMA_VERSION=6.9.8

RUN wget https://github.com/kkos/oniguruma/archive/v${ORIGURUMA_VERSION}.tar.gz -O oniguruma-${ORIGURUMA_VERSION}.tar.gz \
    && tar -zxvf oniguruma-${ORIGURUMA_VERSION}.tar.gz \
    && cd oniguruma-${ORIGURUMA_VERSION} \
    && ./autogen.sh \
    && ./configure \
    && make \
    && make install

# 安装必要的扩展
RUN docker-php-ext-install bcmath mbstring zip pdo_mysql gmp
RUN pecl install redis \
    && docker-php-ext-enable redis

    

# 安装gd
RUN docker-php-ext-configure gd --with-freetype=/usr/include/ --with-jpeg=/usr/include/  && \
    docker-php-ext-install gd &&  docker-php-ext-enable  gd


# 安装 imagick
# RUN apt-get install -y libmagickwand-dev && pecl install imagick && docker-php-ext-enable  imagick

# 安装composer
RUN wget https://mirrors.aliyun.com/composer/composer.phar \
	&& mv composer.phar /usr/local/bin/composer \
	&& chmod +x /usr/local/bin/composer && composer config -g repo.packagist composer https://packagist.pages.dev/
RUN a2enmod rewrite;


# xdebug
#RUN pecl install xdebug && docker-php-ext-enable  xdebug



#RUN useradd php
COPY default.conf /etc/apache2/sites-enabled/000-default.conf
# RUN mkdir /home/php && chown php /home/php
# COPY php.ini /usr/local/etc/php/conf.d

WORKDIR /var/www/html

COPY . /var/www/html

# RUN chmod 777 -R storage
# RUN chmod 777 -R bootstrap

EXPOSE 80

#USER www-data
# RUN composer install

WORKDIR /var/www/html
#RUN php artisan  docker:buildinfo


#RUN sed -i 's/^exec /service cron start \n\n exec /' /usr/local/bin/apache2-foreground


